import { ApiProperty } from '@nestjs/swagger';
import { Role, Status, User as PrismaUser } from 'generated/prisma';

export class UserEntity implements PrismaUser {
  @ApiProperty({ example: 1, description: 'ID n·ªôi b·ªô c·ªßa ng∆∞·ªùi d√πng' })
  id: number;

  @ApiProperty({
    example: '550e8400-e29b-41d4-a716-446655440000',
    description: 'ID c√¥ng khai c·ªßa ng∆∞·ªùi d√πng (UUID)',
  })
  publicId: string;

  @ApiProperty({
    example: 'nguoidung@example.com',
    description: 'ƒê·ªãa ch·ªâ email c·ªßa ng∆∞·ªùi d√πng',
  })
  email: string;

  @ApiProperty({
    example: 'Nguy·ªÖn VƒÉn A',
    description: 'H·ªç v√† t√™n c·ªßa ng∆∞·ªùi d√πng',
    nullable: true,
  })
  fullName: string | null;

  @ApiProperty({
    example: '0123456789',
    description: 'S·ªë ƒëi·ªán tho·∫°i c·ªßa ng∆∞·ªùi d√πng',
    nullable: true,
  })
  phone: string | null;

  @ApiProperty({
    enum: Role,
    example: Role.STAFF,
    description: 'Vai tr√≤ c·ªßa ng∆∞·ªùi d√πng',
  })
  role: Role;

  @ApiProperty({
    example: 'https://example.com/avatar.jpg',
    description: 'URL ·∫£nh ƒë·∫°i di·ªán',
    nullable: true,
  })
  avatar: string | null;

  @ApiProperty({
    enum: Status,
    example: Status.ACTIVE,
    description: 'Tr·∫°ng th√°i c·ªßa ng∆∞·ªùi d√πng',
  })
  status: Status;

  @ApiProperty({
    example: '2023-01-01T00:00:00Z',
    description: 'Th·ªùi gian ƒëƒÉng nh·∫≠p l·∫ßn cu·ªëi',
    nullable: true,
  })
  lastLoginAt: Date | null;

  @ApiProperty({
    example: '2023-01-01T00:00:00Z',
    description: 'Th·ªùi gian g·ª≠i OTP l·∫ßn cu·ªëi',
    nullable: true,
  })
  lastOtpSentAt: Date | null;

  @ApiProperty({
    example: '2023-01-01T00:00:00Z',
    description: 'Th·ªùi gian ƒëƒÉng nh·∫≠p th·∫•t b·∫°i l·∫ßn cu·ªëi',
    nullable: true,
  })
  failedLoginAt: Date | null;

  @ApiProperty({
    example: '2023-01-01T00:00:00Z',
    description: 'Th·ªùi gian t·∫°o b·∫£n ghi',
  })
  createdAt: Date;

  @ApiProperty({
    example: '2023-01-01T00:00:00Z',
    description: 'Th·ªùi gian c·∫≠p nh·∫≠t b·∫£n ghi',
  })
  updatedAt: Date;

  // üëá Li√™n k·∫øt v·ªõi EmailOtp
  emailOtps: any[]; // b·∫°n c√≥ th·ªÉ map sang EmailOtpEntity n·∫øu mu·ªën t√°ch r√µ

  constructor(partial: Partial<UserEntity>) {
    Object.assign(this, partial);
  }
}
